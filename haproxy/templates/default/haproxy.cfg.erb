<%= render "haproxy.cfg.globals.erb" %>

<% if node[:opsworks][:layers][:nginxphpapp][:instances].empty? -%>
    <%= render "haproxy.cfg.fallback.erb" %>
<% else -%>
    <%= render "haproxy.cfg.backend.erb", :variables => {
        :layername => 'nginxphpapp',
        :instances => node[:opsworks][:layers][:nginxphpapp][:instances],
        :haproxy => node[:haproxy]
    } %>
<% end -%>

<% if !node[:haproxy][:additional_layers].nil? || !node[:haproxy][:additional_layers].empty?  -%>
  <% node[:haproxy][:additional_layers].each do |layername,layerconfig| -%>
  <%= render "haproxy.cfg.backend.erb", :variables => {
      :layername => layername,
      :instances => node[:opsworks][:layers][:nginxphpapp][:instances],
      :haproxy => node[:haproxy]
  } %>
  <% end -%>
<% end -%>

<%= render "haproxy.cfg.frontend.erb", :variables => {
    :opsworkslayers => node[:opsworks][:layers],
    :haproxy => node[:haproxy]
} %>